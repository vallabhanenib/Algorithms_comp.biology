# -*- coding: utf-8 -*-
"""Lab05.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rID9kfj1fsc7EfbSotfU8ona2gxZb8Zf

produce a working implementation of the recursive algorithm to calculate 

(1) Number of nodes in a tree. 

(2) Height of tree. 

(3) Leaf nodes in a tree.

Function to get Node count
"""

def countNodes(tree):
    root,first,second = tree    
    if first == second == ():
        return 1     
    else:
        return 1 + countNodes(first) + countNodes(second)

def height(tree):
    root,first,second = tree    
    if first == second == ():
        return 0     
    else:
        return 1 + max(height(first), height(second))

def leafList(tree):
    root,first,second = tree    
    if first == second == ():
        return [ root ]       
    else:
        return leafList(first) + leafList(second)

"""Question 1:"""

tree1 = ('A',
     ('B',
          ('C',(),()),
          ('D',(),())
     ),
     ('E',(),())
)

same_tree = ('A', ('B', ('C',(),()), ('D',(),()) ), ('E',(),()) )

print("Number of nodes in tree 1 is: ",countNodes(tree1))
print("Number of nodes in same_tree: ",countNodes(same_tree))
print("Height of the tree 1 is : ", height(tree1))
print("leaf Nodes in the tree 1 are: ", leafList(tree1) )

"""Question 2:"""

tree2 = ('A',('B',('D',(),()),('E',(),())),('C',('F',(),()),('G',(),())))

print("Tuple representation for Question 2: ", tree2)
print("Number of nodes in tree 2 is: ",countNodes(tree2))
print("Height of the tree 2 is : ", height(tree2))
print("Leaf Nodes in the tree 2 are: ", leafList(tree2) )

"""Question 3:"""

tree3 = ('A',('B',(),()),('C',('D',('E',(),()),('F',(),())),('G',(),())))

print("Tuple representation for Question 3: ", tree3)
print("Number of nodes in tree 3 is: ",countNodes(tree3))
print("Height of the tree 3 is : ", height(tree3))
print("Leaf Nodes in the tree 3 are: ", leafList(tree3) )

"""Question 4:"""

tree4 = ('A',('B',('C',(),()),('D',(),())),('E',('F',(),()),('G',('H',(),()),('I',(),()))))

print("Tuple representation for Question 4: ", tree4)
print("Number of nodes in tree 4 is: ",countNodes(tree4))
print("Height of the tree 4 is : ", height(tree4))
print("Leaf Nodes in the tree 4 are: ", leafList(tree4))

"""Question 5:"""

tree5 = ('A',('B',(),()),('C',('D',(),()),('E',('F',(),()),('G',(),()))))

print("Tuple representation for Question 5: ", tree5)
print("Number of nodes in tree 5 is: ",countNodes(tree5))
print("Height of the tree 5 is : ", height(tree5))
print("Leaf Nodes in the tree 5 are: ", leafList(tree5) )

"""Question 6:"""

tree6 = ('A',('B',('C',(),()),('D',('E',(),()),('F',(),()))),('G',(),()))

print("Tuple representation for Question 6: ", tree6)
print("Number of nodes in tree 6 is: ",countNodes(tree6))
print("Height of the tree 6 is : ", height(tree6))
print("Leaf Nodes in the tree 6 are: ", leafList(tree6) )

"""Question 7:"""

tree7 = ('A',('B',('C',(),()),('D',('E',('F',(),()),('G',(),())),('H',(),()))),('I',(),()))

print("Tuple representation for Question 7: ", tree7)
print("Number of nodes in tree 7 is: ",countNodes(tree7))
print("Height of the tree 7 is : ", height(tree7))
print("Leaf Nodes in the tree 7 are: ", leafList(tree7) )